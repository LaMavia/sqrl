webpackHotUpdate("main",{

/***/ "./client/src/actions/user.actions.ts":
/*!********************************************!*\
  !*** ./client/src/actions/user.actions.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst sendQuery_1 = __webpack_require__(/*! ../functions/sendQuery */ \"./client/src/functions/sendQuery.ts\");\r\nexports.USER_LOGIN = \"USER_LOGIN\";\r\nexports.USER_LOGGED = \"USER_LOGGED\";\r\nexports.USER_LOADING = \"USER_LOADING\";\r\nexports.USER_ERRORED = \"USER_ERRORED\";\r\nexports.USER_LOADED = \"USER_LOADED\";\r\nexports.userLogin = (username, password) => ({\r\n    type: exports.USER_LOGIN,\r\n    data: {\r\n        username,\r\n        password\r\n    }\r\n});\r\nexports.userIsLoading = (yayOrNay) => ({\r\n    type: exports.USER_LOADING,\r\n    isLoading: yayOrNay\r\n});\r\nexports.userErrored = (error) => ({\r\n    type: exports.USER_ERRORED,\r\n    error\r\n});\r\nexports.userLoaded = (user) => ({\r\n    type: exports.USER_LOADED,\r\n    user\r\n});\r\nexports.userLogged = (isLoggedIn) => ({\r\n    type: exports.USER_LOGGED,\r\n    isLoggedIn\r\n});\r\n// Functions ----------------------------------------------------------------\r\nexports.getUser = (apiURL, conditions) => [apiURL, conditions].some(x => typeof x === \"undefined\")\r\n    // @ts-ignore because of \"this\" binding\r\n    ? exports.getUser.bind(this, ...[apiURL, conditions, limit, skip])\r\n    : (dispatch) => {\r\n        dispatch(exports.userIsLoading(true));\r\n        sendQuery_1.sendQuery(`\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tUser(${conditions}) {\r\n\t\t\t\t\t\t_id\r\n\t\t\t\t\t\tName\r\n\t\t\t\t\t\tUsername\r\n\t\t\t\t\t\tEmail\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t`, {}, apiURL)\r\n            .then(res => res.json())\r\n            .then(({ data }) => dispatch(exports.userLoaded(data.User)))\r\n            .catch(err => dispatch(exports.userErrored(new Error(err))))\r\n            .finally(() => dispatch(exports.userIsLoading(false)));\r\n    };\r\nexports.loginUser = (apiURL, username, password) => [apiURL, username, password].some(x => typeof x === \"undefined\")\r\n    // @ts-ignore because of \"this\" binding\r\n    ? exports.getUser.bind(this, ...[apiURL, conditions, limit, skip])\r\n    : (dispatch) => {\r\n        dispatch(exports.userIsLoading(true));\r\n        sendQuery_1.sendQuery(`\r\n\t\t\t{\r\n\t\t\t\tLogin(Username: \"${username}\", Password: \"${password}\") {\r\n\t\t\t\t\t_id\r\n\t\t\t\t\tName\r\n\t\t\t\t\tUsername\r\n\t\t\t\t\tEmail\r\n\t\t\t\t\tProfileImageURL\r\n\t\t\t\t\tBackgroundImageURL\r\n\t\t\t\t\tFollowers\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`, {}, apiURL)\r\n            .then(res => res.json())\r\n            .then(({ data }) => dispatch(exports.userLoaded(data.Login)))\r\n            .then(() => dispatch())\r\n            .catch(err => dispatch(exports.userErrored(new Error(err))))\r\n            .finally(() => dispatch(exports.userIsLoading(false)));\r\n    };\r\n\n\n//# sourceURL=webpack:///./client/src/actions/user.actions.ts?");

/***/ })

})